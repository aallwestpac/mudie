/*
 * Sidebar - lanyon addition
 * The lanyon sidebar implementation was inspired by Chris Coyier's
 * "Offcanvas Menu with CSS Target" article, and the checkbox variation from the
 * comments by a reader. It modified both implementations to continue using the
 * checkbox (no change in URL means no polluted browser history), but this uses
 * `position` for the menu to avoid some potential content reflow issues.
 * Source: http://css-tricks.com/off-canvas-menu-with-css-target/#comment-207504
 *
 * Modification to lanyon sidebar inspired by Jelena Jovanovic:
 *   https://codepen.io/plavookac/pen/qomrMw;
 * now sidebar will slide in/overlay content instead of pushing page to side.
 * ~ WestPac web developer
 */

/* Style and "hide" the sidebar */

.switch {
   display: block;
   position: absolute;
   height: 60px;
   width: 250px;
}


#sidebarMenu {
   background-color: #003399;
   color: rgba(255,255,255,.6);
   height: 100%;
   position: absolute;
   left: -14rem;
   width: 14rem;
   transform: translateX(0);
   transition: transform 450ms ease-in-out;
   padding-top: 60px;
   font-family: "PT Sans", Helvetica, Arial, sans-serif;
   font-size: .875rem; /* 15px */
   z-index: 77;
}

@media (min-width: 30em) {
   #sidebarMenu {
      font-size: .75rem; /* 14px */
   }
}

/* Sidebar content */
#sidebarMenu a {
   font-weight: normal;
   color: #fff;
}
.sidebar-item {
   padding: 1rem;
}
.sidebar-item p:last-child {
   margin-bottom: 0;
}
.sidebar-footer {
   bottom: 0;
   padding: 1rem;
}

/* Sidebar nav */
.sidebar-nav {
   border-bottom: 1px solid rgba(255,255,255,.1);
}
.sidebar-nav-item {
   display: block;
   padding: .5rem 1rem;
   border-top: 1px solid rgba(255,255,255,.1);
}
.sidebar-nav-item.active,
a.sidebar-nav-item:hover,
a.sidebar-nav-item:focus {
   text-decoration: none;
   background-color: rgba(255,255,255,.1);
   border-color: transparent;
}

@media (min-width: 48em) {
   .sidebar-item {
      padding: 1.5rem;
   }
   .sidebar-nav-item {
      padding-left:   1.5rem;
      padding-right: 1.5rem;
   }
}

/* Style the sidebar content */

.sidebarMenuInner {
   margin: 0;
   padding: 0;
   border-top: 1px solid rgba(255, 255, 255, 0.10);
}

.sidebarMenuInner a {
   color: #fff;
   font-weight: bold;
   padding: 20px;
   cursor: pointer;
   text-decoration: none;
   border-bottom: 1px solid rgba(255, 255, 255, 0.10);
}

input[type="checkbox"]:checked~#sidebarMenu {
   transform: translateX(14rem);
}

/* Style the sidebar toggle button */

input[type=checkbox] {
   transition: all 0.3s;
   box-sizing: border-box;
   display: none;
}

.sidebarIconToggle {
   transition: all 0.3s;
   box-sizing: content-box;
   border-radius: 30px;
   box-shadow: 0px 0px 40px rgba(228,238,202,0.5) inset;
   cursor: pointer;
   position: fixed;
   height: 22px;
   width: 22px;
   margin: 2px;
   padding: 20px 18px 14px;
   z-index: 99;
}

.spinner {
   transition: all 0.3s;
   box-sizing: border-box;
   position: absolute;
   height: 3px;
   width: 100%;
   background-color: #003399;
}

.horizontal {
   color: #003399;
   transition: all 0.3s;
   box-sizing: border-box;
   position: relative;
   float: left;
   margin-top: 3px;
}

.diagonal.part-1 {
   position: relative;
   transition: all 0.3s;
   box-sizing: border-box;
   float: left;
}

.diagonal.part-2 {
   transition: all 0.3s;
   box-sizing: border-box;
   position: relative;
   float: left;
   margin-top: 3px;
}

input[type=checkbox]:checked~.sidebarIconToggle {
   background-position: -100% 0;
   box-shadow: none;
}

input[type=checkbox]:checked~.sidebarIconToggle>.horizontal {
   transition: all 0.3s;
   box-sizing: border-box;
   opacity: 0;
}

input[type=checkbox]:checked~.sidebarIconToggle>.diagonal.part-1 {
   background-color: #FFFFFF;
   transition: all 0.3s;
   box-sizing: border-box;
   transform: rotate(135deg);
   margin-top: 8px;
}

input[type=checkbox]:checked~.sidebarIconToggle>.diagonal.part-2 {
   background-color: #FFFFFF;
   transition: all 0.3s;
   box-sizing: border-box;
   transform: rotate(-135deg);
   margin-top: -9px;
}

@media (min-width: 30.1em) {
   .sidebar-toggle {
      position: fixed;
   }
}

@media print {
   .sidebar-toggle {
      display: none;
   }
}

/* Slide effect
 *
 * Handle the sliding effects of the sidebar and content in one spot, seperate
 * from the default styles.
 *
 * Lanyon says: as a heads up, we don't use `transform: translate3d()` here because when
 * mixed with `position: fixed;` for the sidebar toggle, it creates a new
 * containing block. Put simply, the fixed sidebar toggle behaves like
 * `position: absolute;` when transformed.
 *
 * Read more about it at http://meyerweb.com/eric/thoughts/2011/09/12/.
 */

.wrap,
.sidebar,
.sidebar-toggle {
   -webkit-backface-visibility: hidden;
      -ms-backface-visibility: hidden;
         backface-visibility: hidden;
}
.wrap,
.sidebar-toggle {
   -webkit-transition: -webkit-transform .3s ease-in-out;
         transition: transform .3s ease-in-out;
}

#sidebar-checkbox:checked + .sidebar {
   z-index: 10;
   visibility: visible;
}
#sidebar-checkbox:checked ~ .sidebar,
#sidebar-checkbox:checked ~ .wrap,
#sidebar-checkbox:checked ~ .sidebar-toggle {
   -webkit-transform: translateX(14rem);
      -ms-transform: translateX(14rem);
         transform: translateX(14rem);
}


/*
 * Reverse layout
 *
 * Flip the orientation of the page by placing the `.sidebar` and sidebar toggle
 * on the right side.
 */

.layout-reverse .sidebar {
   left: auto;
   right: -14rem;
}
.layout-reverse .sidebar-toggle {
   left: auto;
   right: 1rem;
}

.layout-reverse #sidebar-checkbox:checked ~ .sidebar,
.layout-reverse #sidebar-checkbox:checked ~ .wrap,
.layout-reverse #sidebar-checkbox:checked ~ .sidebar-toggle {
   -webkit-transform: translateX(-14rem);
      -ms-transform: translateX(-14rem);
         transform: translateX(-14rem);
}


/*
 * Themes
 *
 * Apply custom color schemes by adding the appropriate class to the `body`.
 * Based on colors from Base16: http://chriskempson.github.io/base16/#default.
 */

/* Red */
.theme-base-08 .sidebar,
.theme-base-08 .sidebar-toggle:active,
.theme-base-08 #sidebar-checkbox:checked ~ .sidebar-toggle {
   background-color: #ac4142;
}
.theme-base-08 .container a,
.theme-base-08 .sidebar-toggle,
.theme-base-08 .related-posts li a:hover {
   color: #ac4142;
}

/* Orange */
.theme-base-09 .sidebar,
.theme-base-09 .sidebar-toggle:active,
.theme-base-09 #sidebar-checkbox:checked ~ .sidebar-toggle {
   background-color: #d28445;
}
.theme-base-09 .container a,
.theme-base-09 .sidebar-toggle,
.theme-base-09 .related-posts li a:hover {
   color: #d28445;
}

/* Yellow */
.theme-base-0a .sidebar,
.theme-base-0a .sidebar-toggle:active,
.theme-base-0a #sidebar-checkbox:checked ~ .sidebar-toggle {
   background-color: #f4bf75;
}
.theme-base-0a .container a,
.theme-base-0a .sidebar-toggle,
.theme-base-0a .related-posts li a:hover {
   color: #f4bf75;
}

/* Green */
.theme-base-0b .sidebar,
.theme-base-0b .sidebar-toggle:active,
.theme-base-0b #sidebar-checkbox:checked ~ .sidebar-toggle {
   background-color: #90a959;
}
.theme-base-0b .container a,
.theme-base-0b .sidebar-toggle,
.theme-base-0b .related-posts li a:hover {
   color: #90a959;
}

/* Cyan */
.theme-base-0c .sidebar,
.theme-base-0c .sidebar-toggle:active,
.theme-base-0c #sidebar-checkbox:checked ~ .sidebar-toggle {
   background-color: #75b5aa;
}
.theme-base-0c .container a,
.theme-base-0c .sidebar-toggle,
.theme-base-0c .related-posts li a:hover {
   color: #75b5aa;
}

/* Blue */
.theme-base-0d .sidebar,
.theme-base-0d .sidebar-toggle:active,
.theme-base-0d #sidebar-checkbox:checked ~ .sidebar-toggle {
   background-color: #6a9fb5;
}
.theme-base-0d .container a,
.theme-base-0d .sidebar-toggle,
.theme-base-0d .related-posts li a:hover {
   color: #6a9fb5;
}

/* Magenta */
.theme-base-0e .sidebar,
.theme-base-0e .sidebar-toggle:active,
.theme-base-0e #sidebar-checkbox:checked ~ .sidebar-toggle {
   background-color: #aa759f;
}
.theme-base-0e .container a,
.theme-base-0e .sidebar-toggle,
.theme-base-0e .related-posts li a:hover {
   color: #aa759f;
}

/* Brown */
.theme-base-0f .sidebar,
.theme-base-0f .sidebar-toggle:active,
.theme-base-0f #sidebar-checkbox:checked ~ .sidebar-toggle {
   background-color: #8f5536;
}
.theme-base-0f .container a,
.theme-base-0f .sidebar-toggle,
.theme-base-0f .related-posts li a:hover {
   color: #8f5536;
}


/*
 * Overlay sidebar
 *
 * Make the sidebar content overlay the viewport content instead of pushing it
 * aside when toggled.
 */

.sidebar-overlay #sidebar-checkbox:checked ~ .wrap {
   -webkit-transform: translateX(0);
      -ms-transform: translateX(0);
         transform: translateX(0);
}
.sidebar-overlay #sidebar-checkbox:checked ~ .sidebar-toggle {
   box-shadow: 0 0 0 .25rem #fff;
}
.sidebar-overlay #sidebar-checkbox:checked ~ .sidebar {
   box-shadow: .25rem 0 .5rem rgba(0,0,0,.1);
}

/* Only one tweak for a reverse layout */
.layout-reverse.sidebar-overlay #sidebar-checkbox:checked ~ .sidebar {
   box-shadow: -.25rem 0 .5rem rgba(0,0,0,.1);
}
